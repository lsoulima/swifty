{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport * as Linking from \"expo-linking\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n  var app_url = Linking.createURL();\n  console.log(app_url);\n  var client_id = \"22885e48c641821b3ec506d92722f36f13163875eefc833a7c7b218048631612\";\n  var url = \"https://api.intra.42.fr/oauth/authorize?client_id=\" + client_id + \"&redirect_uri=exp%3A%2F%2F192.168.1.103%3A19000&response_type=code\";\n\n  var handleLogin = function handleLogin() {\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            WebBrowser.openBrowserAsync(url);\n            Linking.addEventListener(\"url\", function (event) {\n              var data = Linking.parse(event.url);\n              var code = data.queryParams.code;\n              WebBrowser.dismissBrowser();\n              navigation.navigate(\"Home\", {\n                code: code,\n                app_url: app_url\n              });\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/bg.png\"),\n    style: styles.background,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(Button, {\n        color: \"rgb(3,186,188)\",\n        onPress: handleLogin,\n        children: _jsxs(View, {\n          style: styles.loginButton,\n          children: [_jsx(Image, {\n            source: require(\"../assets/logo.png\"),\n            style: styles.headerImage\n          }), _jsx(Text, {\n            style: styles.loginButtonText,\n            children: \"Login\"\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 15,\n    justifyContent: \"center\"\n  },\n  background: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  loginButton: {\n    borderRadius: 8,\n    paddingVertical: 14,\n    paddingHorizontal: 10,\n    backgroundColor: \"#00AFB1\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\"\n  },\n  loginButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\",\n    fontSize: 16,\n    textAlign: \"center\"\n  },\n  headerImage: {\n    width: 26,\n    height: 26,\n    marginHorizontal: 10\n  }\n});","map":{"version":3,"sources":["/Users/lsoulima/Desktop/swifty/screens/Login.js"],"names":["React","WebBrowser","Linking","Login","navigation","app_url","createURL","console","log","client_id","url","handleLogin","openBrowserAsync","addEventListener","event","data","parse","code","queryParams","dismissBrowser","navigate","require","styles","background","container","loginButton","headerImage","loginButtonText","StyleSheet","create","flex","padding","justifyContent","width","height","borderRadius","paddingVertical","paddingHorizontal","backgroundColor","alignItems","flexDirection","color","fontWeight","textTransform","fontSize","textAlign","marginHorizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Image,\n  Button,\n  ImageBackground,\n} from \"react-native\";\n// import { globalStyles } from \"../styles/A\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport * as Linking from \"expo-linking\";\n\nexport default function Login({ navigation }) {\n  const app_url = Linking.createURL();\n  console.log(app_url);\n  const client_id =\n    \"22885e48c641821b3ec506d92722f36f13163875eefc833a7c7b218048631612\";\n  const url =\n    \"https://api.intra.42.fr/oauth/authorize?client_id=\" +\n    client_id +\n    \"&redirect_uri=exp%3A%2F%2F192.168.1.103%3A19000&response_type=code\";\n\n  const handleLogin = async () => {\n    WebBrowser.openBrowserAsync(url);\n    Linking.addEventListener(\"url\", (event) => {\n      let data = Linking.parse(event.url);\n      let code = data.queryParams.code;\n\n      WebBrowser.dismissBrowser();\n      navigation.navigate(\"Home\", { code: code, app_url: app_url });\n    });\n  };\n\n  return (\n    <ImageBackground\n      source={require(\"../assets/bg.png\")}\n      style={styles.background}\n    >\n      <View style={styles.container}>\n        <Button color=\"rgb(3,186,188)\" onPress={handleLogin}>\n          <View style={styles.loginButton}>\n            <Image\n              source={require(\"../assets/logo.png\")}\n              style={styles.headerImage}\n            />\n            <Text style={styles.loginButtonText}>Login</Text>\n          </View>\n        </Button>\n      </View>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 15,\n    justifyContent: \"center\",\n  },\n  background: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  loginButton: {\n    borderRadius: 8,\n    paddingVertical: 14,\n    paddingHorizontal: 10,\n    backgroundColor: \"#00AFB1\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n  },\n  loginButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\",\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  headerImage: {\n    width: 26,\n    height: 26,\n    marginHorizontal: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}